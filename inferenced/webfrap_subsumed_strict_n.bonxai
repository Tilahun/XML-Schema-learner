namespace http://example.com/generated

grammar {
	( //title/text | //block/text | //ref/text | //tableField/text | //link/text | //lable/text | //form_insert/text | //attribut/text | //sum/text | //equal/entity/text | //src/entity/text | //display/text/text | //row/entity/text | //ref/label/text | //entity/description/text | //group/description/text | //component/description/text | //filter/description/text | //form_edit/status/text | //row/text/text | //uiElement/status/text | //head/bars/status/text | //body/row/caption/text | //ref/row/caption/text | //body/row/col/text | //ref/row/col/text | //component_ex/bars/status/text | //tab/row/caption/text | //tag ) = {
		attribute lang { string },
		attribute key { string }?,
		EMPTY
	}

	( //equal/entity | //src/entity | //title ) = {
		attribute special { string }?,
		element text*
	}

	( //layout/ref/src | //entity/references/ref/src | //group/references/ref/src ) = {
		attribute name { string }?,
		attribute id { string }?,
		attribute alias { string }?,
		attribute refId { string }?,
		( element user, element entity )
	}

	//display/table = {
		attribute src { string }?,
		attribute field { string }?,
		element equal
	}

	//attribute/ref = {
		attribute name { string }?,
		attribute nam { string }?,
		attribute category { string }?,
		attribute mode { string }?,
		( element check, element text* )
	}

	( //message/content | //embed/content | //concept/content | //categories/attribute/content | //attributes/attribute/content | //if/attribute/content | //else/attribute/content | //emebd | //order ) = {
		attribute name { string }?,
		element block
	}

	( //categories/attribute | //if/attribute | //else/attribute | //src/attributes/attribute | //layout/ref/connection/attributes/attribute | //entity/references/ref/connection/attributes/attribute | //group/references/ref/connection/attributes/attribute ) = {
		attribute name { string },
		attribute target { string }?,
		attribute type { string }?,
		( element title, element content )
	}

	( //messages | //search | //comment ) = {
		attribute type { string }?,
		element message
	}

	//bdl = {
		attribute version { string }?,
		( element messages | element entities | element components | element processes | element managements )+
	}

	( //overview/attribute | //entity/attributes/attribute | //group/attributes/attribute ) = {
		attribute is_a { string }?,
		attribute name { string }?,
		attribute type { string }?,
		attribute size { string }?,
		attribute target { string }?,
		attribute required { string }?,
		attribute validator { string }?,
		attribute equired { string }?,
		( element display | element uiElement | element identField | element events | element label | element sequence | element ref | element emebd | element embed | element name | element search | element groups | element description | element tableField | element hidden | element comment | element fk | element categories | element optional | element searchField | element link | element groupBy | element typed | element category | element concepts )+?
	}

	//display/overview = {
		attribute name { string }?,
		attribute position { string }?,
		attribute size { string }?,
		( element attribute | element categories | element semantic | element condition | element attribut )+?
	}

	( //entity/description | //group/description ) = {
		attribute src { string }?,
		attribute useRef { string }?,
		element text*
	}

	( //layout/ref/target | //entity/references/ref/target | //group/references/ref/target ) = {
		attribute name { string },
		attribute id { string },
		attribute alias { string }?,
		attribute inherit { string }?,
		element filters?
	}

	( //layout/ref | //entity/references/ref | //group/references/ref ) = {
		attribute name { string },
		attribute binding { string }?,
		attribute relation { string },
		attribute target { string }?,
		attribute base { string }?,
		( element label | element target | element connection | element src | element comment | element description )+?
	}

	//uiElement/layout = {
		attribute valign { string }?,
		element ref*
	}

	( //semantic/group | //attribute/group | //label/group ) = {
		attribute name { string },
		attribute label { string }?,
		( element attributes | element references | element concepts | element properties | element semantic | element access | element categories | element keys | element comment | element description | element label | element lable )+
	}

	//uiElement/size = {
		attribute width { string }?,
		( element entity*, element references? )
	}

	//display = {
		attribute field { string }?,
		attribute type { string }?,
		( element table | element text | element overview )?
	}

	( //components/component/fields | //hidden/component/fields | //fields/component/fields ) = {
		attribute value { string }?,
		attribute id { string }?,
		attribute join { string }?,
		attribute srcId { string }?,
		( element id, element value, element order )?
	}

	( //components/component | //hidden/component | //fields/component ) = {
		attribute name { string }?,
		attribute src { string },
		attribute type { string },
		( ( element source?, element head, element body? ) | ( ( element label*, element description? )?, element fields, element filters? ) )
	}

	( //searchField/fields | //required/fields | //endpoint/fields | //ref/fields | //properties/component/fields | //target/component/fields ) = {
		attribute value { string }?,
		attribute id { string }?,
		attribute order { string }?,
		( element component | element component_ex )+
	}

	( //onUpdate/update | //size/update ) = {
		attribute target { string }?,
		attribute targetId { string }?,
		attribute src { string }?,
		element concept
	}

	( //layout/ref/connection | //entity/references/ref/connection | //group/references/ref/connection ) = {
		attribute name { string },
		attribute id { string }?,
		element attributes?
	}

	//attribute/categories = {
		attribute main { string }?,
		attribute position { string }?,
		element attribute
	}

	( //optional/category | //acl/category | //text/category | //groups/categories/category | //attributes/categories/category | //overview/categories/category ) = {
		attribute name { string }?,
		attribute label { string }?,
		attribute main { string }?,
		attribute type { string }?,
		( ( element layout | element access )?, element label )?
	}

	( //onLeave/acl | //group/acl | //label/acl | //startpoint/acl | //entity/access/acl | //group/access/acl ) = {
		attribute lang { string }?,
		attribute value { string }?,
		attribute key { string }?,
		( element category* | element group )
	}

	//attribute/uiElement = {
		attribute type { string },
		attribute class { string }?,
		attribute size { string }?,
		attribute src { string }?,
		attribute readonly { string }?,
		attribute hardcoded { string }?,
		attribute filter { string }?,
		( element filters | element field* | ( element layout, element size ) )?
	}

	//identField = {
		attribute src { string }?,
		attribute field { string }?,
		element paths?
	}

	( //groups/semantic | //attributes/semantic | //overview/semantic ) = {
		attribute name { string }?,
		attribute is_a { string }?,
		element group*
	}

	( //properties/component | //target/component | //required | //endpoint ) = {
		attribute type { string },
		attribute name { string }?,
		element fields
	}

	( //entity/properties | //group/properties ) = {
		attribute name { string }?,
		attribute id { string }?,
		element component?
	}

	( //component/description | //filter/description | //link | //lable ) = {
		attribute name { string }?,
		element text*
	}

	( //optional/group | //categories/group | //access/acl/group | //onLeave/acl/group | //group/acl/group | //label/acl/group | //startpoint/acl/group | //fail/text/group | //group/text/group | //tags ) = {
		attribute name { string }?,
		attribute label { string }?,
		element tag*
	}

	( //entity/semantic | //group/semantic | //reference ) = {
		attribute src { string }?,
		attribute id { string }?,
		( element concepts | ( element parent?, element tags ) )?
	}

	( //param/group | //col/text/group | //groupBy/path/acl/group | //paths/path/acl/group | //user/path/acl/group | //source/path/acl/group | //startpoint ) = {
		attribute name { string }?,
		element acl
	}

	( //typed/group | //description/group | //onArrive/acl/group | //max/acl/group | //right/acl/group | //action/acl/group | //hidden/acl/group | //category/acl/group | //tab/events/acl/group | //component_ex/events/acl/group | //management/label/text/group | //fail ) = {
		attribute name { string }?,
		element text
	}

	( //activ/target | //text/target ) = {
		attribute name { string }?,
		attribute is { string }?,
		attribute max_lower { string }?,
		attribute max_higher { string }?,
		element attribute*
	}

	( //onUpdate/path | //insert/path | //identField/paths/path ) = {
		attribute name { string },
		attribute alias { string }?,
		attribute srcId { string }?,
		attribute targetId { string }?,
		element attributes
	}

	( //label/ref | //category/ref | //entities/references/ref | //size/references/ref ) = {
		attribute name { string },
		attribute binding { string },
		attribute relation { string },
		( element label, element src, element connection, element target )
	}

	( //entities/references | //size/references ) = {
		attribute name { string }?,
		element ref
	}

	( //filter/filter | //target/filters/filter ) = {
		attribute srcField { string },
		attribute targetField { string },
		element description
	}

	( //update/filter | //component/filters/filter ) = {
		attribute srcId { string }?,
		attribute targetId { string }?,
		element filter
	}

	( //max/onUpdate | //right/onUpdate | //action/onUpdate | //hidden/onUpdate | //size/onUpdate | //attribute/events/onUpdate | //form_edit/events/onUpdate | //component/head/events/onUpdate | //category/head/events/onUpdate | //field/head/events/onUpdate | //tab/head/events/onUpdate ) = {
		attribute width { string }?,
		attribute height { string }?,
		attribute minWidth { string }?,
		attribute minHeight { string }?,
		attribute maxWidth { string }?,
		attribute maxHeight { string }?,
		element update
	}

	( //form_edit/action | //head/bars/action ) = {
		attribute width { string }?,
		attribute height { string }?,
		attribute minWidth { string }?,
		attribute minHeight { string }?,
		attribute maxWidth { string }?,
		attribute maxHeight { string }?,
		element onUpdate
	}

	//process/status = {
		attribute src { string },
		attribute id { string },
		element reference
	}

	( //row/category | //onArrive ) = {
		attribute name { string }?,
		element acl?
	}

	//node/events = {
		attribute name { string }?,
		attribute mode { string }?,
		( element onArrive, ( element onDeadline, element onFallback )?, element onLeave )
	}

	( //groupBy/path/acl | //paths/path/acl | //user/path/acl | //source/path/acl | //param ) = {
		attribute lang { string }?,
		( element owner | element group )?
	}

	( //always/action | //template/action ) = {
		attribute name { string },
		attribute field { string }?,
		element param*
	}

	( //always | //template ) = {
		attribute page { string }?,
		attribute slice { string }?,
		element action*
	}

	( //groupBy/path | //user/path | //source/path | //node/paths/path ) = {
		attribute target { string },
		attribute srcId { string }?,
		( element label, element description?, element acl, ( ( element check, element success, element fail )?, element always )? )
	}

	( //check/field | //col/field ) = {
		attribute field { string },
		attribute src { string },
		element required
	}

	//layout/col = {
		attribute type { string }?,
		attribute align { string }?,
		element field
	}

	( //node/paths | //user ) = {
		attribute srcId { string }?,
		attribute targetId { string }?,
		element path*
	}

	//node = {
		attribute name { string },
		attribute target { string }?,
		( element events | element paths | element activ | element endpoint | element startpoint | element label )+
	}

	( //onArrive/acl | //max/acl | //right/acl | //action/acl | //hidden/acl | //category/acl | //tab/events/acl | //component_ex/events/acl | //typed ) = {
		attribute lang { string }?,
		element group
	}

	( //management/description/text | //activ ) = {
		attribute lang { string }?,
		element target*
	}

	//process = {
		attribute name { string },
		attribute src { string },
		( element status, element node* )
	}

	( //processes | //gender ) = {
		attribute lang { string }?,
		attribute key { string }?,
		element process
	}

	( //management/events/onUpdate | //insert ) = {
		attribute window { string }?,
		element path
	}

	( //entity/categories | //group/categories ) = {
		attribute main { string },
		element category?
	}

	//component/filters = {
		attribute window { string }?,
		element filter
	}

	//component/head/properties = {
		attribute src { string }?,
		( element close, element max )
	}

	( //form_insert/menus | //form_edit/status/menus | //head/bars/status/menus ) = {
		attribute src { string }?,
		( element left, element right )
	}

	( //form_edit/status | //head/bars/status | //form_insert ) = {
		attribute src { string }?,
		( element menus, element text )
	}

	//view/form_edit = {
		attribute src { string }?,
		( element title, element status, element info, element action )
	}

	//component/head = {
		attribute unit { string }?,
		( element field* | ( element size, element properties, element bars, element access, element events ) )
	}

	( //form_edit/properties | //category/head/properties | //field/head/properties | //tab/head/properties | //group_role ) = {
		attribute name { string }?,
		( element closable, element readonly, element disabled, element reload, element hidden )
	}

	//then/form_edit = {
		attribute src { string }?,
		( element properties, element label, element tooltip, element access, element constraint, element events )
	}

	( //body/row/caption | //ref/row/caption ) = {
		attribute key { string },
		element text*
	}

	( //body/row/col | //ref/row/col ) = {
		attribute size { string },
		attribute type { string },
		attribute key { string }?,
		element text*
	}

	( //body/row | //ref/row ) = {
		attribute name { string },
		attribute type { string },
		( element caption, element col* )
	}

	( //category/body | //field/body | //tab/body ) = {
		attribute name { string }?,
		element row
	}

	( //body/tab | //path/tab ) = {
		attribute name { string },
		attribute position { string }?,
		( element head, element body )
	}

	//filter/paths/path = {
		attribute field { string }?,
		element tab
	}

	( //component_ex/properties | //key ) = {
		attribute width { string }?,
		( element close, element max )
	}

	( //attribut/menus | //sum/menus | //uiElement/status/menus | //component_ex/bars/status/menus | //color ) = {
		attribute value { string }?,
		( element left, element right )
	}

	( //uiElement/status | //component_ex/bars/status | //sum ) = {
		attribute is_a { string }?,
		( element menus, element text )
	}

	//component_ex/bars = {
		attribute type { string }?,
		( element title, element status, element info, element action )
	}

	//tab/properties = {
		attribute lang { string }?,
		( element closable, element readonly, element disabled, element reload, element hidden )
	}

	//tab/row/caption = {
		element text
	}

	//tab/row/col = {
		attribute size { string }?,
		attribute type { string }?,
		attribute key { string }?,
		( element entity | element text )?
	}

	//tab/row = {
		attribute name { string }?,
		attribute type { string }?,
		( element cms* | element entity | element ref | element html | element template | element text | ( element access, element constraint, element category ) | ( element caption?, element col* ) )
	}

	//content/tab = {
		attribute name { string },
		( element properties, element label, element tooltip, element access, element constraint, element events, element row* )
	}

	//component_ex/content = {
		element tab
	}

	//component_ex = {
		attribute type { string },
		attribute name { string },
		attribute src { string },
		( element size, element properties, element bars, element access, element events, element content )
	}

	( //attribute/concepts | //semantic/concepts | //reference/concepts ) = {
		element concept
	}

	//category/layout = {
		element col*
	}

	//category/access/acl = {
		attribute type { string },
		( element role, element owner, element responsible, element user )
	}

	//category/access = {
		element acl
	}

	//management/label = {
		element text*
	}

	//management/description = {
		element text*
	}

	//genders = {
		element gender*
	}

	//management/semantic = {
		element genders
	}

	//management/events = {
		( element onInsert, element onUpdate )
	}

	//view/condition/if = {
		( element entity | element group_role )
	}

	//then = {
		element form_edit
	}

	//view/condition = {
		( element if*, element then )
	}

	//view = {
		( element insert, element update, element table, element overview, element form_insert, element form_edit, element condition )
	}

	//management/references = {
		element ref*
	}

	//management = {
		attribute name { string },
		attribute src { string },
		( element label, element description, element semantic, element events, element view, element references )
	}

	//managements = {
		element management*
	}

	//filter/paths = {
		element path
	}

	//uiElement/filters/filter = {
		attribute srcId { string },
		attribute targetId { string },
		element paths?
	}

	//uiElement/filters = {
		attribute name { string }?,
		element filter
	}

	//primaryKey = {
		element key
	}

	//keys = {
		element primaryKey
	}

	//source = {
		attribute name { string },
		element path
	}

	//head/field = {
		attribute name { string },
		attribute src { string }?,
		attribute type { string }?,
		( element size | element color | element label | element sum )
	}

	( //groups/condition/if | //attributes/condition/if | //overview/condition/if ) = {
		attribute exists { string },
		element attribute*
	}

	//else = {
		element attribute*
	}

	( //groups/condition | //attributes/condition | //overview/condition ) = {
		( element if, element else )
	}

	//parent = {
		attribute target { string },
		element uiElement
	}

	//attribute/label = {
		element text*
	}

}
